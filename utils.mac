/* Copyright (C) 2013 by Alessandro Campagni */

/*
 * This file is part of YoungTableaux.                                        
 *     YoungTableau is free software: you can redistribute it and/or modify   
 *     it under the terms of the GNU General Public License as published by   
 *     the Free Software Foundation, either version 3 of the License, or      
 *     (at your option) any later version.                                    
 *                                                                            
 *     YoungTableaux is distributed in the hope that it will be useful,       
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of         
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          
 *     GNU General Public License for more details.                           
 *                                                                            
 *     You should have received a copy of the GNU General Public License      
 *     along with YoungTableaux.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * Author: Alessandro Campagni <alessandro@lilik.it>
 */

infix (">>=");

/* true if e is bigger than every element of l */
">>=" (e,l) := if listp (l) then block (
  if emptyp (l) then true
  else return (e >= last (sort (l, 'orderlessp))))
  else error ("second operand should be a list");

/* naive bottom pop */
/* no check for bad input */
/* backpop (l) := block (last (l), l:rest (l, -1)) */
/* naive version is not working :D, this better one is inspired */
/* to pop macro in basic.mac */
backpop(l)::=(symbolcheck(l),buildq([l],prog1(last(l),l:rest(l, -1))));

/* this is a partial order over the rows length of a tableau */
/* maybe we should check if lengthlessp is a partial order */
lengthlessp (l1, l2) := (length (l1) < length (l2));