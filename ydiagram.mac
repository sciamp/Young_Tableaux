/* Copyright (C) 2013 by Alessandro Campagni */

/*
 * This file is part of YoungTableaux.                                        
 *     YoungTableau is free software: you can redistribute it and/or modify   
 *     it under the terms of the GNU General Public License as published by   
 *     the Free Software Foundation, either version 3 of the License, or      
 *     (at your option) any later version.                                    
 *                                                                            
 *     YoungTableaux is distributed in the hope that it will be useful,       
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of         
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          
 *     GNU General Public License for more details.                           
 *                                                                            
 *     You should have received a copy of the GNU General Public License      
 *     along with YoungTableaux.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * Author: Alessandro Campagni <alessandro@lilik.it>
 */

defstruct (ydiagram (rows));

new_ydiagram_safe (l) := block (
  [yd],
  yd : new (ydiagram (sort (l, 'orderlessp))),
  return (yd));

ydiagramp (d) := listp (d@rows) and d@rows = sort (d@rows, 'orderlessp);

ydiagram_transpose (d) := block (
  [tdl,rows,n,td],
  tdl : makelist (),
  rows : d@rows,
  for i : 1 unless emptyp (rows) do block (
    cols : length (rows),
    n : pop (rows),
    rows : delete (n, rows, cols),
    rows : rows-1,
    for j : 1 thru n do push (cols, tdl)),
  td : new_ydiagram_safe (tdl),
  return (td));

ydiagram_size (d) := block (
  [size],
  size : 0,
  for i : 1 thru length (d@rows) do size : size+d@rows[i],
  return (size));